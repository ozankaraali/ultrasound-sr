---
project: deblur_gan
experiment_desc: busiblur_inception

train:
#  files_a: &FILES_A /datasets/my_dataset/**/*.jpg
  #可以使用绝对路径
  # files_a: &FILES_A D:/deblur/goprol_large/**/*.png
  # files_b: *FILES_A
  # files_a: &FILES_A /content/drive/MyDrive/THESIS_ULTRASOUND_SR_SHARED_DRIVE/Image-Super-Resolution-via-Iterative-Refinement/dataset/ccapngdata/fakesr/*.png
  # files_b: &FILES_B /content/drive/MyDrive/THESIS_ULTRASOUND_SR_SHARED_DRIVE/Image-Super-Resolution-via-Iterative-Refinement/dataset/ccapngdata/HR/x4/*.png
  files_a: /home/karaaliozan/dataset/BUSI/train/LRBlurBic/x4/*.png
  files_b: /home/karaaliozan/dataset/BUSI/train/HRBlur/x4/*.png
  size: &SIZE 256
  crop: random
  preload: &PRELOAD false
  preload_size: &PRELOAD_SIZE 0
  bounds: [0, 1]
  scope: geometric
  corrupt:
    # - name: cutout
    #   prob: 0.5
    #   num_holes: 3
    #   max_h_size: 25
    #   max_w_size: 25
    # - name: jpeg
    #   quality_lower: 70
    #   quality_upper: 90
    # - name: motion_blur
    # - name: median_blur
    # - name: gamma
    # - name: rgb_shift
    # - name: hsv_shift
    # - name: sharpen

val:
  #files_a: *FILES_A
  #files_b: *FILES_A
  # files_a: /content/drive/MyDrive/THESIS_ULTRASOUND_SR_SHARED_DRIVE/Image-Super-Resolution-via-Iterative-Refinement/dataset/us-images-test/fakesr/*.png
  # files_b: /content/drive/MyDrive/THESIS_ULTRASOUND_SR_SHARED_DRIVE/Image-Super-Resolution-via-Iterative-Refinement/dataset/us-images-test/HR/*.png
  files_a: /home/karaaliozan/dataset/BUSI/val/LRBlurBic/x4/*.png
  files_b: /home/karaaliozan/dataset/BUSI/val/HRBlur/x4/*.png
  size: *SIZE
  scope: geometric
  crop: center
  preload: *PRELOAD
  preload_size: *PRELOAD_SIZE
  bounds: [0, 1]
  corrupt:

phase: train
warmup_num: -1
model:
  g_name: fpn_inception
  blocks: 9
  d_name: double_gan # may be no_gan, patch_gan, double_gan, multi_scale
  d_layers: 3
  content_loss: perceptual
  adv_lambda: 0.001
  disc_loss: ragan-ls
  learn_residual: True
  norm_layer: instance
  dropout: True

num_epochs: 100
train_batches_per_epoch: 1000
val_batches_per_epoch: 100
batch_size: 8
image_size: [256, 256]

optimizer:
  name: adam
  lr: 0.0001
scheduler:
  name: linear
  start_epoch: 70
  min_lr: 0.0000001